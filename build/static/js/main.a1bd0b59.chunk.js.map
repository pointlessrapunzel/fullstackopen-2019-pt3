{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","onChange","type","Person","person","removePerson","name","number","onClick","id","Persons","persons","map","key","PersonForm","props","onSubmit","inputAttributes","newName","handleNameChange","newNumber","handleNumberChange","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Notification","message","style","fontSize","background","borderStyle","borderRadius","padding","marginBottom","color","App","useState","setPersons","setNewName","setNewNumber","newFilter","setNewFilter","emptyNotification","text","notification","setNotification","resetNotification","setTimeout","useEffect","personService","initialPersons","event","target","preventDefault","personObj","trim","findPerson","find","toLowerCase","window","confirm","returnedPerson","p","catch","filter","concat","alert","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1bd0b59.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div>\r\n  filter shown with\r\n    <input type=\"text\" value={value} \r\n          onChange={onChange} \r\n    />\r\n  </div>\r\n)\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Person = ({ person, removePerson }) => (\r\n  <tr>\r\n    <td>{person.name}</td>\r\n    <td>{person.number}</td>\r\n    <td>\r\n      <button type=\"button\" onClick={removePerson(person.id)}>\r\n        delete\r\n      </button>\r\n    </td>\r\n  </tr>\r\n)\r\n\r\nconst Persons = ({ persons, removePerson }) => (\r\n  <div>\r\n    <h2>Numbers</h2>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Number</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {persons.map(person => \r\n          <Person key={person.id} person={person} removePerson={removePerson}/>)\r\n        }\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n)\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n  const { onSubmit, inputAttributes } = props\r\n  const [ newName, handleNameChange, \r\n        newNumber, handleNumberChange ] = inputAttributes\r\n\r\n  return (\r\n  <div>\r\n    <h2>Add a new</h2>\r\n    <form onSubmit={onSubmit}>\r\n      <div>\r\n        name: <input \r\n                type=\"text\"\r\n                value={newName}\r\n                onChange={handleNameChange}  \r\n              />\r\n      </div>\r\n      <div>\r\n        number: <input\r\n                  type=\"text\"\r\n                  value={newNumber}\r\n                  onChange={handleNumberChange}\r\n                />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React from 'react'\r\n\r\nconst Notification = ({message, type}) => {\r\n  if (message === null) return null\r\n\r\n  const style = {\r\n    fontSize: 20,\r\n    background: 'lightgray',\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10\r\n  }\r\n\r\n  if (type === 'success') style.color = 'green'\r\n  if (type === 'danger') style.color = 'red'\r\n  if (type === 'warning') style.color = '#FF5522'\r\n\r\n  return (\r\n    <div style={style}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport Persons from './components/Persons'\r\nimport PersonForm from './components/PersonForm'\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ newFilter, setNewFilter ] = useState('')\r\n\r\n  const emptyNotification = {\r\n    text: null,\r\n    type: null\r\n  }\r\n\r\n  const [ notification, setNotification] = useState(emptyNotification)\r\n\r\n  const resetNotification = () => {\r\n    setTimeout(() => {\r\n      setNotification(emptyNotification)\r\n    }, 5000)\r\n  }\r\n\r\n  // asking the server for the list of persons\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => setPersons(initialPersons))\r\n  }, [])\r\n\r\n  /*\r\n\r\n    FILTERING THE LIST OF PERSONS\r\n\r\n  */\r\n  const filterPersons = () => (\r\n  // if filter not empty, filter the array accordingly\r\n    !newFilter ? persons :\r\n      persons.filter(person => \r\n        person.name.toLowerCase()\r\n          .includes(newFilter.trim().toLowerCase())) \r\n  )\r\n\r\n  const handleFilterChange = (event) => {\r\n    setNewFilter(event.target.value)\r\n  }\r\n\r\n  /*\r\n\r\n    ADDING A NEW PERSON\r\n\r\n  */\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    const personObj = {\r\n      name: newName.trim(),\r\n      number: newNumber.trim()\r\n    }\r\n\r\n    const findPerson = (name) => {\r\n      return persons.find(person => \r\n        person.name.toLowerCase() \r\n          === name.trim().toLowerCase()\r\n      )\r\n    }\r\n\r\n    // form validation\r\n    if (!newName || !newNumber) {\r\n      alert(\"You have to enter a name and a number!\")\r\n    } else if (findPerson(newName)) {\r\n      // person is already added, change the number\r\n      if (\r\n        window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\r\n      ) {\r\n        personService\r\n          .update(findPerson(newName).id, personObj)\r\n          .then(returnedPerson => {\r\n            setNotification({\r\n              text: `${returnedPerson.name}'s number has been changed`,\r\n              type: 'warning'\r\n            })\r\n            resetNotification()\r\n            setPersons(persons.map(p => \r\n              p.id !== returnedPerson.id\r\n              ? p\r\n              : returnedPerson\r\n            ))\r\n            setNewName('')\r\n            setNewNumber('')\r\n          })\r\n          .catch(() => {\r\n            setNotification({\r\n              text: `Information of ${personObj.name} has already been removed from server`,\r\n              type: 'danger'\r\n            })\r\n            setPersons(persons.filter(p => p.name !== personObj.name))\r\n            resetNotification()\r\n          })\r\n      }\r\n    } else {\r\n      // add the new person\r\n      personService\r\n        .create(personObj)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setNotification({\r\n            text: `Added ${returnedPerson.name}`,\r\n            type: 'success'\r\n          })\r\n          resetNotification()\r\n          setNewName('')\r\n          setNewNumber('')\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value) \r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  /*\r\n\r\n    REMOVING A PERSON\r\n\r\n  */\r\n  const removePerson = id => () => {\r\n   personService\r\n    .remove(id)\r\n    .then(() => {\r\n      let name = persons.find(p => p.id === id).name\r\n      setNotification({\r\n        text: `Information of ${name} has been deleted`,\r\n        type: 'danger'\r\n      })\r\n      setPersons(persons.filter(p => p.id !== id))\r\n      resetNotification()\r\n    })\r\n    .catch(() => {\r\n      let name = persons.find(p => p.id === id).name\r\n      setNotification({\r\n        text: `Information of ${name} has already been removed from server`,\r\n        type: 'danger'\r\n      })\r\n      setPersons(persons.filter(p => p.id !== id))\r\n      resetNotification()\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Notification \r\n        message={notification.text} \r\n        type={notification.type}\r\n      />\r\n      <Filter value={newFilter} onChange={handleFilterChange} />\r\n      <PersonForm onSubmit={addPerson}\r\n        inputAttributes=\r\n          {[newName, handleNameChange, newNumber, handleNumberChange]}\r\n      />\r\n      <Persons \r\n        persons={filterPersons()} \r\n        removePerson={removePerson}  \r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}